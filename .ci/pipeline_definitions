ops-toolbelt:
  base_definition:
    traits:
      version:
        preprocess:
          'inject-commit-hash'
        inject_effective_version: true
      component_descriptor:
        ocm_repository: europe-docker.pkg.dev/gardener-project/snapshots
        ocm_repository_mappings:
          - repository: europe-docker.pkg.dev/gardener-project/releases
      publish:
        oci-builder: docker-buildx
        platforms:
        - linux/amd64
        - linux/arm64
        dockerimages:
          ops-toolbelt:
            image: europe-docker.pkg.dev/gardener-project/snapshots/gardener/ops-toolbelt
            dockerfile: ops-toolbelt.dockerfile
            inputs:
              steps:
                build: ~
            resource_labels:
            - name: 'gardener.cloud/cve-categorisation'
              value:
                network_exposure: 'protected'
                authentication_enforced: true
                user_interaction: 'gardener-operator'
                confidentiality_requirement: 'high'
                integrity_requirement: 'high'
                availability_requirement: 'low'
    steps:
      test: ~
      build:
        output_dir: 'generated_dockerfiles'
      verify-bandit: ~
      verify-shellcheck: ~

  jobs:
    head-update:
      traits:
        draft_release: ~
    pull-request:
      traits:
        pull-request: ~
    release:
      steps:
        verify-bandit:
          vars:
            DESTINATION: '"python.sarif"'
        verify-shellcheck:
          vars:
            DESTINATION: '"bash.sarif"'
      traits:
        component_descriptor:
          ocm_repository: europe-docker.pkg.dev/gardener-project/releases
        version:
          preprocess: 'finalize'
        release:
          nextversion: 'bump_minor'
          assets:
            - type: build-step-log
              step_name: verify-shellcheck
              purposes:
                - lint
                - sast
                - shellcheck
              comment: | 
                We use shellcheck (linter for shell scripts) for SAST scans, reference - https://github.com/koalaman/shellcheck
            - type: build-step-log
              step_name: verify-bandit
              purposes:
                - lint
                - sast
                - bandit
              comment: | 
                We use bandit (linter for python code) for SAST scans, reference - https://github.com/PyCQA/bandit
        slack:
          default_channel: 'internal_scp_workspace'
          channel_cfgs:
            internal_scp_workspace:
              channel_name: 'C9CEBQPGE' #internal gardener channel
              slack_cfg_name: 'scp_workspace'
        publish:
          oci-builder: docker-buildx
          platforms:
          - linux/amd64
          - linux/arm64
          dockerimages:
            ops-toolbelt:
              image: europe-docker.pkg.dev/gardener-project/releases/gardener/ops-toolbelt
              tag_as_latest: true
              extra_push_targets:
                - eu.gcr.io/gardener-project/gardener/ops-toolbelt
  repo:
    source_labels:
      - name: cloud.gardener.cnudie/dso/scanning-hints/source_analysis/v1
        value:
          policy: skip
          comment: |
            We use bandit and shellcheck for sast scanning, see attached log.

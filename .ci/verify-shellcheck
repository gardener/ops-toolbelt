#! /usr/bin/env bash

set -e
set -o pipefail

SOURCE_PATH=${SOURCE_PATH:-}

if [[ -z ${SOURCE_PATH} ]]; then
    SOURCE_PATH="$(readlink -f "$(dirname "${0}")"/..)"
fi
cd "${SOURCE_PATH}" || exit 1

SHELLCHECK_VERSION="0.10.0-r1"
FILE_LIST=" \
    ./install_on_demand/.etcdctl \
    ./install_on_demand/.table \
    ./install_on_demand/.shrc \
    ./install_on_demand/.k9s\
    ./install_on_demand/.wireguard\
    ./hacks/print-etcd-cheatsheet\
    ./hacks/ops-pod\
    ./hacks/install_etcdctl\
    ./hacks/install_k9s\
    .ci/test\
    .ci/build\
    ./dotfiles/.bashrc\
    ./dotfiles/.bash_aliases\
    ./dotfiles/.bash_profile\
    ./dotfiles/.bash_prompt\
    ./.ci/verify-shellcheck\
    ./.ci/verify-bandit\
"

if ! command -v shellcheck 1>&2 >/dev/null; then
    apk add "shellcheck=${SHELLCHECK_VERSION}" >/dev/null 2>&1 || exit 2
fi

if ! command -v shellcheck-sarif 1>&2 >/dev/null; then
    # Cargo is required to install shellcheck-sarif
    if ! command -v cargo 1>&2 >/dev/null; then
        apk add cargo >/dev/null 2>&1 || exit 3
    fi
    cargo -v install shellcheck-sarif >/dev/null 2>&1 || exit 4
    export PATH="${HOME}/.cargo/bin:${PATH}"
fi

if [ "${DESTINATION}" == "" ]; then
    # shellcheck disable=SC2086
    shellcheck -f json ${FILE_LIST} | shellcheck-sarif
    exit 0
fi
# shellcheck disable=SC2086
shellcheck -f json ${FILE_LIST} | shellcheck-sarif | tee "${DESTINATION}"
